<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Adobe RoboHelp 11" />
<title>Session Options/Terminal/Emulation/Advanced</title>
<link rel="StyleSheet" href="SecureCRT.css" type="text/css" />
<style type="text/css">
<!--
.BannerBase { font-size:14pt;
font-weight:bold;
margin:0pt 1px 0pt 0pt;
font-family:Arial, sans-serif;
fhname:Banner Base; }
.Base { font-size:10pt;
margin:0pt 1px 0pt 0pt;
font-family:Arial, sans-serif; }
.Base1 { font-size:10pt;
margin:6pt 0pt 6pt 0pt;
font-family:System, sans-serif;
fhname:Base#1; }
.Base025indent { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.Base025indent1 { margin:0pt 0pt 0pt 18pt;
fhname:Base025indent#1; }
.Base025indhanging { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
text-indent:18pt;
font-family:Arial, sans-serif; }
.Base050indent { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif; }
.Base050indent1 { margin:0pt 0pt 0pt 36pt;
fhname:Base050indent#1; }
.Base050indhanging { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
text-indent:36pt;
font-family:Arial, sans-serif; }
.Base075indent { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:Arial, sans-serif; }
.BigBoldBase { font-size:11pt;
font-weight:bold;
margin:0pt 0pt 0.05in 0pt;
font-family:Arial, sans-serif; }
.BodyText2 { margin:0pt 0pt 0pt 0.3in;
font-family:Arial, sans-serif;
fhname:Body Text 2; }
.BodyTextIndent2 { margin:0pt 0pt 0pt 0.6in;
font-family:Arial, sans-serif;
fhname:Body Text Indent 2; }
.Bullet1 { font-size:10pt;
margin:0pt 0pt 2pt 0.2097in;
text-indent:-0.2097in;
font-family:Arial, sans-serif; }
.bullet11 { font-size:8pt;
margin:0pt 0.014in 0pt 0.2in;
text-indent:-0.2in;
font-family:Arial, sans-serif;
fhname:bullet1#1; }
.Bullet2 { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
text-indent:-18pt;
font-family:Arial, sans-serif; }
.Bullet3 { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:Arial, sans-serif; }
.Bullet4 { font-size:10pt;
margin:0pt 0pt 0pt 72pt;
text-indent:72pt;
font-family:Arial, sans-serif; }
CODE { font-size:10pt;
font-family:"Courier New" , sans-serif;
fhtype:character; }
.CODE1 { font-size:10pt;
font-family:"Courier New" , sans-serif;
fhname:CODE#1;
fhtype:character; }
.CodeText { font-size:10pt;
font-family:"Courier New" , sans-serif; }
.CodeText075Indent { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:"Courier New" , sans-serif; }
.DefaultParagraphFont { font-size:12pt;
font-family:"Times New Roman" , sans-serif;
fhname:Default Paragraph Font;
fhtype:character; }
.DefaultParagraphFont1 { font-size:12pt;
font-family:"Times New Roman" , sans-serif;
fhname:Default Paragraph Font#1;
fhtype:character; }
.Dialog { font-size:10pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhtype:character; }
.Entry { font-size:10pt;
font-family:"Courier New" , sans-serif; }
.Entry025indent { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
font-family:"Courier New" , sans-serif; }
.Entry025indent1 { margin:6pt 0pt 6pt 18pt;
font-family:"Courier New" , sans-serif;
fhname:Entry025indent#1; }
.Entry050indent { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
font-family:"Courier New" , sans-serif; }
.Entry075indent { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:"Courier New" , sans-serif; }
.Entry100indent { font-size:10pt;
margin:0pt 0pt 0pt 72pt;
font-family:"Courier New" , sans-serif; }
.ExampleProgram { font-size:10pt;
font-family:"Courier New" , sans-serif; }
.Field { font-size:10pt;
font-weight:bold;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.Figure { font-style:italic; }
.footnotereference { font-size:12pt;
vertical-align:super;
font-family:"Times New Roman" , sans-serif;
fhname:footnote reference;
fhtype:character; }
.footnotetext { fhname:footnote text; }
.GlossaryTerm { font-size:11pt;
font-weight:bold;
margin:0pt 0pt 3pt 0pt;
font-family:Arial, sans-serif;
fhname:Glossary Term; }
.Group { font-size:10pt;
font-weight:bold;
margin:0.0166in 0pt 0.0166in 0pt;
font-family:Arial, sans-serif; }
.Heading { font-size:12pt;
font-weight:bold;
margin:12pt 0pt 6pt 0pt;
font-family:System, sans-serif; }
.heading1 { font-size:16pt;
font-weight:bold;
font-style:italic;
fhname:heading 1; }
.heading11 { font-weight:bold;
font-family:Arial, sans-serif;
fhname:heading 1#1; }
.heading2 { font-size:14pt;
font-weight:bold;
margin:0pt 0pt 0pt 18pt;
fhname:heading 2; }
.heading21 { font-weight:bold;
margin:0pt 0pt 0pt 0.3in;
font-family:Arial, sans-serif;
fhname:heading 2#1; }
.heading3 { font-size:12pt;
font-weight:bold;
margin:0pt 0pt 0pt 36pt;
fhname:heading 3; }
.heading4 { font-size:9pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhname:heading 4;
text-decoration:overline; }
.heading41 { font-size:10pt;
font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 36pt;
fhname:heading 4#1; }
.heading5 { font-size:9pt;
font-weight:bold;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif;
fhname:heading 5;
text-decoration:underline; }
.heading51 { font-size:11pt;
font-weight:bold;
margin:0pt 0pt 0pt 54pt;
fhname:heading 5#1; }
.heading5Body { font-size:9pt;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif;
fhname:heading 5:  Body; }
.heading6 { font-size:9pt;
font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 36pt;
fhname:heading 6; }
.heading61 { font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 72pt;
fhname:heading 6#1; }
.Heading6Body { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:Arial, sans-serif;
fhname:Heading 6:  Body; }
.heading8 { font-weight:bold;
text-align:center;
fhname:heading 8; }
.Hyperlink { font-size:12pt;
color:#0000ff;
font-family:"Times New Roman" , sans-serif;
fhtype:character;
text-decoration:underline; }
.Hyperlink1 { font-size:12pt;
color:#0000ff;
font-family:"Times New Roman" , sans-serif;
fhname:Hyperlink#1;
fhtype:character;
text-decoration:underline; }
.Label1 { font-size:8pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhname:Label#1;
fhtype:character; }
.MenuCommand { font-size:10pt;
font-weight:bold;
margin:12pt 0pt 0pt 0pt;
font-family:Arial, sans-serif; }
.MenuCommand2ndLevel { font-size:10pt;
font-weight:bold;
margin:6pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.NewCodeText { font-size:10pt;
margin:0pt 1px 0pt 0pt;
font-family:"Courier New" , sans-serif; }
.Normal { font-size:12pt;
margin:5pt 0pt 5pt 0pt;
font-family:"Times New Roman" , sans-serif; }
.Normal1 { font-size:10pt;
margin:0pt 1px 0pt 0pt;
font-family:"Times New Roman" , sans-serif;
fhname:Normal#1; }
.Normal2 { font-size:12pt;
margin:0pt 1px 0pt 0pt;
font-family:"Times New Roman" , sans-serif;
fhname:Normal#2; }
.Normal3 { font-size:12pt;
margin:0pt 1px 0pt 0pt;
font-family:Arial, sans-serif;
fhname:Normal#3; }
.NoteBold { font-size:10pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhtype:character; }
.NoteTest025indent { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif; }
.NoteText { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.Number1 { font-size:10pt;
font-family:Arial, sans-serif; }
.Number2 { font-size:10pt;
font-family:Arial, sans-serif; }
.Number3 {  }
.Number4 {  }
.Number5 {  }
.ObjHead025Indent { font-size:10pt;
font-weight:bold;
margin:0pt 0pt 0.028in 18pt;
font-family:Arial, sans-serif;
text-decoration:underline; }
.ObjHead050Indent { font-size:10pt;
font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif; }
.Seealso { margin:24pt 0pt 6pt 0pt; }
.Step { font-size:10pt;
margin:0pt 0pt 12pt 18pt;
text-indent:-18pt;
font-family:Arial, sans-serif; }
.Step2 { font-size:10pt;
margin:0pt 0pt 12pt 36pt;
text-indent:-18pt;
font-family:Arial, sans-serif; }
.TableBody { font-size:10pt;
margin:3pt 0pt 3pt 0pt;
font-family:Arial, sans-serif; }
body { background-color:#ffffff; }
-->
</style>
<!--ForeHelp.Ignore-->
<script src="./sniffer.js" type="text/javascript" language="JavaScript1.2"></script>
<script src="./hhscript.js" type="text/javascript" language="JavaScript1.2"></script>
<script src="./SecureCRT.js" type="text/javascript" language="JavaScript1.2"></script>
<script src="./fh_dhtml.js" type="text/javascript" language="JavaScript1.2"></script>
<!--ForeHelp.EndIgnore-->
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="whmsg.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript" src="whver.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whlang.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js" charset="utf-8"></script>

</head>

<body bgproperties="FIXED"><a name="bc-1"></a><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.replace(strUrl.substring(0, n));
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("Dialogs\nSession Options Dialog\nTerminal\nTerminal/Emulation/Advanced");
addTocInfo("Terminal Emulation Settings\nAdvanced Terminal Settings\nOverview of Advanced Terminal Settings");
addTocInfo("Terminal Emulation Settings\nAdvanced Terminal Settings\nEnabling the Answerback Message");
addTocInfo("Terminal Emulation Settings\nAdvanced Terminal Settings\nModifying the Terminal Type String");
addTocInfo("Terminal Emulation Settings\nAdvanced Terminal Settings\nModifying How the Tab Character is Displayed");
addTocInfo("Terminal Emulation Settings\nAdvanced Terminal Settings\nEnabling Local Echo");
addTocInfo("Terminal Emulation Settings\nAdvanced Terminal Settings\nStripping the 8th Bit");
addAvenueInfo("Dialogs","SO_Terminal_Emulation_Mapped_Keys.htm","SO_Terminal_Appearance.htm");
addAvenueInfo("Terminal Emulation Settings","SO_Terminal_Emulation_Modes.htm","Xterm_Escape_Sequences.htm");
addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);

	
	if(bc == 6)
{
	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("SecureCRT.htm", "", ">", "Home", "Welcome.htm");
document.write("<a href=\"SO_Terminal_Emulation.htm#bc-2\">Terminal Emulation Settings<\/a> > <a href=\"SO_Terminal_Emulation_Advanced.htm#bc-1\">Advanced Terminal Settings<\/a> > Stripping the 8th Bit<\/p>");
}
else if(bc == 5)
{
	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("SecureCRT.htm", "", ">", "Home", "Welcome.htm");
document.write("<a href=\"SO_Terminal_Emulation.htm#bc-2\">Terminal Emulation Settings<\/a> > <a href=\"SO_Terminal_Emulation_Advanced.htm#bc-1\">Advanced Terminal Settings<\/a> > Enabling Local Echo<\/p>");
}
else if(bc == 4)
{
	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("SecureCRT.htm", "", ">", "Home", "Welcome.htm");
document.write("<a href=\"SO_Terminal_Emulation.htm#bc-2\">Terminal Emulation Settings<\/a> > <a href=\"SO_Terminal_Emulation_Advanced.htm#bc-1\">Advanced Terminal Settings<\/a> > Modifying How the Tab Character is Displayed<\/p>");
}
else if(bc == 3)
{
	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("SecureCRT.htm", "", ">", "Home", "Welcome.htm");
document.write("<a href=\"SO_Terminal_Emulation.htm#bc-2\">Terminal Emulation Settings<\/a> > <a href=\"SO_Terminal_Emulation_Advanced.htm#bc-1\">Advanced Terminal Settings<\/a> > Modifying the Terminal Type String<\/p>");
}
else if(bc == 2)
{
	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("SecureCRT.htm", "", ">", "Home", "Welcome.htm");
document.write("<a href=\"SO_Terminal_Emulation.htm#bc-2\">Terminal Emulation Settings<\/a> > <a href=\"SO_Terminal_Emulation_Advanced.htm#bc-1\">Advanced Terminal Settings<\/a> > Enabling the Answerback Message<\/p>");
}
else if(bc == 1)
{
	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("SecureCRT.htm", "", ">", "Home", "Welcome.htm");
document.write("<a href=\"SO_Terminal_Emulation.htm#bc-2\">Terminal Emulation Settings<\/a> > <a href=\"SO_Terminal_Emulation_Advanced.htm#bc-1\">Advanced Terminal Settings<\/a> > Overview of Advanced Terminal Settings<\/p>");
}
else{
	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("SecureCRT.htm", "", ">", "Home", "Welcome.htm");
document.write("<a href=\"Connect_Dialog.htm\">Dialogs<\/a> > <a href=\"Session_Options_Dialog.htm\">Session Options Dialog<\/a> > <a href=\"SO_Terminal.htm\">Terminal<\/a> > Terminal/Emulation/Advanced<\/p>");
}


}
else
	if (window.gbIE4)
		document.location.reload();

onLoadHandler = function()
{
  if (window.setRelStartPage)
	{
	setTimeout("setRelStartPage('SecureCRT.htm');", 1)

    setTimeout("UpdateBreadCrumbsMarker();", 1);
	}
}

if (window.addEventListener){  
	window.addEventListener('load', onLoadHandler, false);   
} else if (window.attachEvent){  
	window.attachEvent('onload', onLoadHandler);  
}

function onSetStartPage()
{
  autoSync(0);
  sendSyncInfo();
  sendAveInfoOut();
}
//-->
//]]></script>
<script type="text/javascript" src="./ehlpdhtm.js" language="JavaScript1.2"></script>



<!--ForeHelp.EndIgnore-->
<!--ForeHelp.Keyword KKEYS="emulations;Advanced terminal options;Answerback;terminal type;Display tab as;local echo;Strip 8th bit;8th bit;echo;terminal emulation;TAB character;Japanese;UTF-8"-->
<!--ForeHelp.EndKeyword-->
<!--ForeHelp.Banner-->
<p class="Banner"><span><img src="secureicon.bmp" alt="SecureCRT Icon" 
							 title="SecureCRT Icon" width="32" height="32" 
							 border="0" /></span>&#160;&#160;Terminal / 
 Emulation / Advanced</p>
<!--ForeHelp.Ignore-->
<hr align="center" />
<!--ForeHelp.EndIgnore--><!--ForeHelp.EndBanner-->
<p>The <strong>Emulation/Advanced</strong> category of the <!--ForeHelp.Hotspot JUMP="Session_Options_Dialog"--><!--ForeHelp.EndHotspot--><a 
	 href="Session_Options_Dialog.htm"><span class="Dialog">Session Options</span></a> 
 dialog allows you to modify standard <a href="javascript:TextPopup(this)" id="HotSpot33862" class="glossterm">terminal</a><script type="text/javascript" language="JavaScript1.2">//<![CDATA[
TextPopupInit('HotSpot33862', 'POPUP33862');
//]]></script><span class="glosstext" id="POPUP33862" style="display: none;"> A device usually consisting of a keyboard, a display unit such as a cathode ray tube, and a serial port used for entering and sending data to a computer and displaying any data received from the computer.  Terminals are usually connected to a computer with a serial line or some other type of connection.  There are many terminal types including VT100, VT102, VT220, and others.</span> 
 emulation settings for the selected <a href="javascript:TextPopup(this)" id="HotSpot43255" class="glossterm">session</a><script type="text/javascript" language="JavaScript1.2">//<![CDATA[
TextPopupInit('HotSpot43255', 'POPUP43255');
//]]></script><span class="glosstext" id="POPUP43255" style="display: none;"> A session is a set of options that are assigned to a connection to a remote machine.  These settings and options are saved under a session name and allow the user to have different preferences for different hosts.</span> 
 in order to communicate with special remote machines. Most users will 
 not need to modify any of these settings.</p>
<p class="Group">Advanced terminal options group</p>
<p>This group contains advanced emulation controls.</p>
<p class="Field025"><a name="SO_Emulation_Adv_answerbackbc-2"></a><a name="SO_Emulation_Adv_answerback" id="SO_Emulation_Adv_answerback"></a>Answerback</p>
<p class="Normal025">By default, <span>Secure</span>CRT does not respond 
 to the ENQ character with an answerback message. To enable the answerback 
 feature for this session, check this option and enter the message to be 
 sent.</p>
<p class="Normal025">With the <strong>Answerback</strong> option selected, 
 <span>Secure</span>CRT will respond to the ENQ character with the specified 
 answerback message. You can include <a href="Answerback_Substitutions.htm">substitution 
 variables</a> to be sent to the remote server when the server sends the 
 ENQ (control byte 5) command.</p>
<p class="Field025"><a name="SO_Emulation_Adv_termtypebc-3"></a><a name="SO_Emulation_Adv_termtype" id="SO_Emulation_Adv_termtype"></a>Terminal 
 type</p>
<p class="Normal025">By default, <span>Secure</span>CRT sends the terminal 
 type to the remote machine as designated by the <!--ForeHelp.Hotspot JUMP="Session_Options_Emulation"--><!--ForeHelp.EndHotspot--><a 
	 href="SO_Terminal_Emulation.htm">terminal emulation type</a>. To send 
 a string other than the terminal type emulated by <span>Secure</span>CRT 
 to the remote machine, check this option and enter the terminal type string.</p>
<p class="Field025"><a name="SO_Emulation_Adv_tabbc-4"></a><a name="SO_Emulation_Adv_tab" id="SO_Emulation_Adv_tab"></a>Display 
 tab as</p>
<p class="Normal025">Some applications produce data in a tab-separated 
 columnar format. <span>Secure</span>CRT allows you to change how the tab 
 character is displayed by substituting a specific character or string 
 in place of the tab character. For example, substituting a comma in place 
 of the tab character would produce comma-separated data which could be 
 imported into a spreadsheet or other application that uses comma-separated 
 data.</p>
<p class="Normal025">To change the text displayed when a tab character 
 is received by <span>Secure</span>CRT , check this option and enter the 
 tab replacement string or character.</p>
<p class="Group">Other group</p>
<p>This group contains miscellaneous emulation controls.</p>
<p class="Field025"><a name="SO_Emulation_Adv_localechobc-5"></a><a name="SO_Emulation_Adv_localecho" id="SO_Emulation_Adv_localecho"></a>Local 
 echo</p>
<p class="Normal025">Most systems that accept remote terminal connections 
 receive characters from the terminal keyboard and echo them to the terminal 
 screen. However, there are some legacy systems that do not echo characters 
 received from the terminal keyboard to the terminal screen. On such machines, 
 you will not be able to see what you have typed unless you enable local 
 echo. By default, local echo of user input is disabled.</p>
<p class="Normal025">To enable local echo of user input, check this option.</p>
<p class="Field025"><a name="SO_Emulation_Adv_8thbitbc-6"></a><a name="SO_Emulation_Adv_8thbit" id="SO_Emulation_Adv_8thbit"></a>Strip 
 8th bit</p>
<p class="Normal025">ASCII uses seven bits to represent characters. Some 
 seven-bit systems do not clear the eighth bit, causing some characters 
 to be displayed incorrectly. If some characters are not being displayed 
 correctly, try enabling the <b>Strip 8th bit</b> option.</p>
<p class="Normal025">To cause <span>Secure</span>CRT to strip (ignore) 
 the high-order bit of each byte received from the remote host, check this 
 option.</p>
<p class="Field025">Ignore window title change requests</p>
<p class="Normal025">This option causes <span>Secure</span>CRT to ignore 
 escape sequences that would change the title bar.</p>
<p class="Field025" style="background-color: Transparent;"><span>Copy to 
 clipboard as RTF and plain text</span></p>
<p class="Normal025" style="background-color: Transparent;">This option 
 allows SecureCRT to <span style="background-color: Transparent;">copy 
 ANSI color and font data to the clipboard in RTF format so that it can 
 be pasted into document editors (e.g., Microsoft Word).</span></p>
<p class="Field025" style="background-color: Transparent;"><span>Translate 
 incoming CR to CR/LF</span></p>
<p class="Normal025" style="background-color: Transparent;">This option 
 causes <span>Secure</span>CRT to translate an incoming carriage return 
 character (CR) to a carriage return/line feed character (CR/LF).</p>
<p class="Group">Send delay options group</p>
<p>This group contains line and character send delay controls.</p>
<p class="Field025">Line send delay</p>
<p class="Normal025">This option allows you to set the number of milliseconds 
 that <span>Secure</span>CRT pauses after sending a carriage return. This 
 only applies in the following circumstances:</p>
<p class="BulletL2"><img src="BULLET.BMP" alt="Generate/BULLET.gif" title="Generate/BULLET.gif" 
						 style="margin-top: 0pt; margin-bottom: 0pt;" width="8" 
						 height="8" align="bottom" border="0" /> &#160;&#160;&#160;When 
 text is pasted into the <span>Secure</span>CRT window</p>
<p class="BulletL2"><img src="BULLET.BMP" alt="Generate/BULLET.gif" title="Generate/BULLET.gif" 
						 style="margin-top: 0pt; margin-bottom: 0pt;" width="8" 
						 height="8" align="bottom" border="0" /> &#160;&#160;&#160;When 
 text is sent by selecting the <span class="Label">Send ASCII</span> command 
 from the <span class="Label"><a href="Transfer_Menu.htm">Transfer</a></span> 
 menu</p>
<p class="BulletL2"><img src="BULLET.BMP" alt="Generate/BULLET.gif" title="Generate/BULLET.gif" 
						 style="margin-top: 0pt; margin-bottom: 0pt;" width="8" 
						 height="8" align="bottom" border="0" /> &#160;&#160;&#160;When 
 data is sent from an ActiveX script using <span>Secure</span>CRT Send() 
 function</p>
<p class="Field025">Character send delay</p>
<p class="Normal025">This option allows you to set the number of milliseconds 
 that <span>Secure</span>CRT pauses after sending each individual character. 
 This only applies in the following circumstances:</p>
<p class="BulletL2"><img src="BULLET.BMP" alt="Generate/BULLET.gif" title="Generate/BULLET.gif" 
						 style="margin-top: 0pt; margin-bottom: 0pt;" width="8" 
						 height="8" align="bottom" border="0" /> &#160;&#160;&#160;When 
 text is pasted into the <span>Secure</span>CRT window</p>
<p class="BulletL2"><img src="BULLET.BMP" alt="Generate/BULLET.gif" title="Generate/BULLET.gif" 
						 style="margin-top: 0pt; margin-bottom: 0pt;" width="8" 
						 height="8" align="bottom" border="0" /> &#160;&#160;&#160;When 
 text is sent by selecting the <span class="Label">Send ASCII</span> command 
 from the <span class="Label"><a href="Transfer_Menu.htm">Transfer</a></span> 
 menu</p>
<p class="BulletL2"><img src="BULLET.BMP" alt="Generate/BULLET.gif" title="Generate/BULLET.gif" 
						 style="margin-top: 0pt; margin-bottom: 0pt;" width="8" 
						 height="8" align="bottom" border="0" /> &#160;&#160;&#160;When 
 data is sent from an ActiveX script using SecureCRT Send() function</p>
<p class="Field025">Prompt</p>
<p class="Normal025">This option allows you to specify a string to wait 
 for. &#160;This only applies in the following circumstances:</p>
<p class="BulletL2"><img src="BULLET.BMP" alt="Generate/BULLET.gif" title="Generate/BULLET.gif" 
						 style="margin-top: 0pt; margin-bottom: 0pt;" width="8" 
						 height="8" align="bottom" border="0" /> &#160;&#160;&#160;When 
 text is pasted into the <span>Secure</span>CRT window</p>
<p class="BulletL2"><img src="BULLET.BMP" alt="Generate/BULLET.gif" title="Generate/BULLET.gif" 
						 style="margin-top: 0pt; margin-bottom: 0pt;" width="8" 
						 height="8" align="bottom" border="0" /> &#160;&#160;&#160;When 
 text is sent by selecting the <span class="Label">Send ASCII</span> command 
 from the <span class="Label"><a href="Transfer_Menu.htm">Transfer</a></span> 
 menu</p>
<p class="BulletL2"><img src="BULLET.BMP" alt="Generate/BULLET.gif" title="Generate/BULLET.gif" 
						 style="margin-top: 0pt; margin-bottom: 0pt;" width="8" 
						 height="8" align="bottom" border="0" /> &#160;&#160;&#160;When 
 data is sent from an ActiveX script using <span>Secure</span>CRT Send() 
 function</p>
<p class="Field025">Max wait</p>
<p class="Normal025">This option is used in conjunction with the <span 
	 style="font-weight: bold;">Prompt</span> option to specify the maximum 
 number of milliseconds to wait. &#160;A value of 0 indicates that SecureCRT 
 will pause until the prompt is received.</p>
<p class="RelatedTopics">

<a href="javascript:void(0);" onclick="var e; if (parseInt(navigator.appVersion)>=4){e=event;}  if (parseInt(navigator.appVersion) &gt;=2 &amp;&amp; typeof(PopupMenu_Invoke) == 'function') PopupMenu_Invoke(e,'','Session Options/Terminal/Emulation','SO_Terminal_Emulation.htm','Session Options/Terminal/Emulation/Emacs','SO_Terminal_Emulation_Emacs.htm','Session Options/Terminal/Emulation/Mapped Keys','SO_Terminal_Emulation_Mapped_Keys.htm','Session Options/Terminal/Emulation/Modes','SO_Terminal_Emulation_Modes.htm');return false;" title="Related Topics"><img src="ss_btn_related_topics.gif" border="0" height="19" width="93" alt="Related Topics" /></a>


</p>
<p class="RelatedTopics">&#160;</p>
<script type="text/javascript" language="JavaScript">//<![CDATA[
if (parseInt(navigator.appVersion) >= 3 && typeof (WritePopupMenuLayer) == "function")
  WritePopupMenuLayer();
//]]></script><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
