<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Adobe RoboHelp 11" />
<title>Using the Agent</title>
<link rel="StyleSheet" href="SecureCRT.css" type="text/css" />
<style type="text/css">
<!--
.BannerBase { font-size:14pt;
font-weight:bold;
margin:0pt 1px 0pt 0pt;
font-family:Arial, sans-serif;
fhname:Banner Base; }
.Base { font-size:10pt;
margin:0pt 1px 0pt 0pt;
font-family:Arial, sans-serif; }
.Base1 { font-size:10pt;
margin:6pt 0pt 6pt 0pt;
font-family:System, sans-serif;
fhname:Base#1; }
.Base025indent { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.Base025indent1 { margin:0pt 0pt 0pt 18pt;
fhname:Base025indent#1; }
.Base025indhanging { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
text-indent:18pt;
font-family:Arial, sans-serif; }
.Base050indent { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif; }
.Base050indent1 { margin:0pt 0pt 0pt 36pt;
fhname:Base050indent#1; }
.Base050indhanging { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
text-indent:36pt;
font-family:Arial, sans-serif; }
.Base075indent { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:Arial, sans-serif; }
.BigBoldBase { font-size:11pt;
font-weight:bold;
margin:0pt 0pt 0.05in 0pt;
font-family:Arial, sans-serif; }
.BodyText2 { margin:0pt 0pt 0pt 0.3in;
font-family:Arial, sans-serif;
fhname:Body Text 2; }
.BodyTextIndent2 { margin:0pt 0pt 0pt 0.6in;
font-family:Arial, sans-serif;
fhname:Body Text Indent 2; }
.Bullet1 { font-size:10pt;
margin:0pt 0pt 2pt 0.2097in;
text-indent:-0.2097in;
font-family:Arial, sans-serif; }
.bullet11 { font-size:8pt;
margin:0pt 0.014in 0pt 0.2in;
text-indent:-0.2in;
font-family:Arial, sans-serif;
fhname:bullet1#1; }
.Bullet2 { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
text-indent:-18pt;
font-family:Arial, sans-serif; }
.Bullet3 { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:Arial, sans-serif; }
.Bullet4 { font-size:10pt;
margin:0pt 0pt 0pt 72pt;
text-indent:72pt;
font-family:Arial, sans-serif; }
CODE { font-size:10pt;
font-family:"Courier New" , sans-serif;
fhtype:character; }
.CODE1 { font-size:10pt;
font-family:"Courier New" , sans-serif;
fhname:CODE#1;
fhtype:character; }
.CodeText { font-size:10pt;
font-family:"Courier New" , sans-serif; }
.CodeText075Indent { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:"Courier New" , sans-serif; }
.DefaultParagraphFont { font-size:12pt;
font-family:"Times New Roman" , sans-serif;
fhname:Default Paragraph Font;
fhtype:character; }
.DefaultParagraphFont1 { font-size:12pt;
font-family:"Times New Roman" , sans-serif;
fhname:Default Paragraph Font#1;
fhtype:character; }
.Dialog { font-size:10pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhtype:character; }
.Entry { font-size:10pt;
font-family:"Courier New" , sans-serif; }
.Entry025indent { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
font-family:"Courier New" , sans-serif; }
.Entry025indent1 { margin:6pt 0pt 6pt 18pt;
font-family:"Courier New" , sans-serif;
fhname:Entry025indent#1; }
.Entry050indent { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
font-family:"Courier New" , sans-serif; }
.Entry075indent { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:"Courier New" , sans-serif; }
.Entry100indent { font-size:10pt;
margin:0pt 0pt 0pt 72pt;
font-family:"Courier New" , sans-serif; }
.ExampleProgram { font-size:10pt;
font-family:"Courier New" , sans-serif; }
.Field { font-size:10pt;
font-weight:bold;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.Figure { font-style:italic; }
.footnotereference { font-size:12pt;
vertical-align:super;
font-family:"Times New Roman" , sans-serif;
fhname:footnote reference;
fhtype:character; }
.footnotetext { fhname:footnote text; }
.GlossaryTerm { font-size:11pt;
font-weight:bold;
margin:0pt 0pt 3pt 0pt;
font-family:Arial, sans-serif;
fhname:Glossary Term; }
.Group { font-size:10pt;
font-weight:bold;
margin:0.0166in 0pt 0.0166in 0pt;
font-family:Arial, sans-serif; }
.Heading { font-size:12pt;
font-weight:bold;
margin:12pt 0pt 6pt 0pt;
font-family:System, sans-serif; }
.heading1 { font-size:16pt;
font-weight:bold;
font-style:italic;
fhname:heading 1; }
.heading11 { font-weight:bold;
font-family:Arial, sans-serif;
fhname:heading 1#1; }
.heading2 { font-size:14pt;
font-weight:bold;
margin:0pt 0pt 0pt 18pt;
fhname:heading 2; }
.heading21 { font-weight:bold;
margin:0pt 0pt 0pt 0.3in;
font-family:Arial, sans-serif;
fhname:heading 2#1; }
.heading3 { font-size:12pt;
font-weight:bold;
margin:0pt 0pt 0pt 36pt;
fhname:heading 3; }
.heading4 { font-size:9pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhname:heading 4;
text-decoration:overline; }
.heading41 { font-size:10pt;
font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 36pt;
fhname:heading 4#1; }
.heading5 { font-size:9pt;
font-weight:bold;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif;
fhname:heading 5;
text-decoration:underline; }
.heading51 { font-size:11pt;
font-weight:bold;
margin:0pt 0pt 0pt 54pt;
fhname:heading 5#1; }
.heading5Body { font-size:9pt;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif;
fhname:heading 5:  Body; }
.heading6 { font-size:9pt;
font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 36pt;
fhname:heading 6; }
.heading61 { font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 72pt;
fhname:heading 6#1; }
.Heading6Body { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:Arial, sans-serif;
fhname:Heading 6:  Body; }
.heading8 { font-weight:bold;
text-align:center;
fhname:heading 8; }
.Hyperlink { font-size:12pt;
color:#0000ff;
font-family:"Times New Roman" , sans-serif;
fhtype:character;
text-decoration:underline; }
.Hyperlink1 { font-size:12pt;
color:#0000ff;
font-family:"Times New Roman" , sans-serif;
fhname:Hyperlink#1;
fhtype:character;
text-decoration:underline; }
.Label1 { font-size:8pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhname:Label#1;
fhtype:character; }
.MenuCommand { font-size:10pt;
font-weight:bold;
margin:12pt 0pt 0pt 0pt;
font-family:Arial, sans-serif; }
.MenuCommand2ndLevel { font-size:10pt;
font-weight:bold;
margin:6pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.NewCodeText { font-size:10pt;
margin:0pt 1px 0pt 0pt;
font-family:"Courier New" , sans-serif; }
.Normal { font-size:12pt;
margin:5pt 0pt 5pt 0pt;
font-family:"Times New Roman" , sans-serif; }
.Normal1 { font-size:10pt;
margin:0pt 1px 0pt 0pt;
font-family:"Times New Roman" , sans-serif;
fhname:Normal#1; }
.Normal2 { font-size:12pt;
margin:0pt 1px 0pt 0pt;
font-family:"Times New Roman" , sans-serif;
fhname:Normal#2; }
.Normal3 { font-size:12pt;
margin:0pt 1px 0pt 0pt;
font-family:Arial, sans-serif;
fhname:Normal#3; }
.NoteBold { font-size:10pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhtype:character; }
.NoteTest025indent { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif; }
.NoteText { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.Number1 { font-size:10pt;
font-family:Arial, sans-serif; }
.Number2 { font-size:10pt;
font-family:Arial, sans-serif; }
.Number3 {  }
.Number4 {  }
.Number5 {  }
.ObjHead025Indent { font-size:10pt;
font-weight:bold;
margin:0pt 0pt 0.028in 18pt;
font-family:Arial, sans-serif;
text-decoration:underline; }
.ObjHead050Indent { font-size:10pt;
font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif; }
.Seealso { margin:24pt 0pt 6pt 0pt; }
.Step { font-size:10pt;
margin:0pt 0pt 12pt 18pt;
text-indent:-18pt;
font-family:Arial, sans-serif; }
.Step2 { font-size:10pt;
margin:0pt 0pt 12pt 36pt;
text-indent:-18pt;
font-family:Arial, sans-serif; }
.TableBody { font-size:10pt;
margin:3pt 0pt 3pt 0pt;
font-family:Arial, sans-serif; }
body { background-color:#ffffff; }
-->
</style>
<!--ForeHelp.Ignore-->

<script src="./sniffer.js" type="text/javascript" language="JavaScript1.2">
</script>
<script src="./hhscript.js" type="text/javascript" language="JavaScript1.2">
</script>
<script src="./SecureCRT.js" type="text/javascript" language="JavaScript1.2">
</script>
<script src="./fh_dhtml.js" type="text/javascript" language="JavaScript1.2">
</script><!--ForeHelp.EndIgnore-->
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="whmsg.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript" src="whver.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whlang.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js" charset="utf-8"></script>

</head>
<body bgproperties="FIXED"><a name="bc-1"></a><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.replace(strUrl.substring(0, n));
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("Secure Connections\nUsing the Agent");
addTocInfo("System Administration Issues\nCaching Passphrases in SSH2");
addAvenueInfo("Secure Connections","GO_SSH_Host_Keys.htm","");
addAvenueInfo("System Administration Issues","Specifying_the_Configuratio.htm","");
addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);

	
	if(bc == 1)
{
	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("SecureCRT.htm", "", ">", "Home", "Welcome.htm");
document.write("<a href=\"Introduction_to_SysAdmin_Is.htm\">System Administration Issues<\/a> > Caching Passphrases in SSH2<\/p>");
}
else{
	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("SecureCRT.htm", "", ">", "Home", "Welcome.htm");
document.write("<a href=\"Security_Considerations.htm\">Secure Connections<\/a> > Using the Agent<\/p>");
}


}
else
	if (window.gbIE4)
		document.location.reload();

onLoadHandler = function()
{
  if (window.setRelStartPage)
	{
	setTimeout("setRelStartPage('SecureCRT.htm');", 1)

    setTimeout("UpdateBreadCrumbsMarker();", 1);
	}
}

if (window.addEventListener){  
	window.addEventListener('load', onLoadHandler, false);   
} else if (window.attachEvent){  
	window.attachEvent('onload', onLoadHandler);  
}

function onSetStartPage()
{
  autoSync(0);
  sendSyncInfo();
  sendAveInfoOut();
}
//-->
//]]></script>
<script type="text/javascript" src="./ehlpdhtm.js" language="JavaScript1.2"></script>



<!--ForeHelp.EndIgnore-->
<!--ForeHelp.Keyword KKEYS="Agent;passphrases;global options;public keys;public-key authentication;private keys;agent forwarding;forwarding;authentication;flush;cache"-->
<!--ForeHelp.EndKeyword-->
<!--ForeHelp.Banner-->
<p class="Banner"><span><img src="secureicon.bmp" alt="SecureCRT Icon" title="SecureCRT Icon" width="32" height="32" border="0" /></span> &#160;Using the Agent</p>
<!--ForeHelp.Ignore-->
<hr align="center" />
<!--ForeHelp.EndIgnore--><!--ForeHelp.EndBanner-->
<p class="SectionHead">Overview</p>
<p>Agents are programs that work in the background gathering information or performing small processing tasks. In SecureCRT, the implemented agent temporarily holds private keys for use with <!--ForeHelp.Hotspot JUMP="Public_Key_Authentication"--><!--ForeHelp.EndHotspot--><a href="Key_Terminology.htm#Public_Key_Authentication">public-key authentication</a> to multiple remote hosts.</p>
<p>Public-key <a href="javascript:TextPopup(this)" id="HotSpot42518" class="glossterm">authentication</a><script type="text/javascript" language="JavaScript1.2">//<![CDATA[
TextPopupInit('HotSpot42518', 'POPUP42518');
//]]></script><span class="glosstext" id="POPUP42518" style="display: none;"> The process of verifying that an individual truly is who he or she claims to be.  Supplying a password is a very common method of authentication.  The most secure method of authentication supported in SecureCRT is public-key authentication.  See also: identity file, public-private key pair.</span> uses a <!--ForeHelp.Hotspot JUMP="MT_define_public_private_key_pair"--><!--ForeHelp.EndHotspot--><i>public-private key pair</i> to log on to a Secure Shell <a href="javascript:TextPopup(this)" id="HotSpot49865" class="glossterm">server</a><script type="text/javascript" language="JavaScript1.2">//<![CDATA[
TextPopupInit('HotSpot49865', 'POPUP49865');
//]]></script><span class="glosstext" id="POPUP49865" style="display: none;"> A computer program that provides services to other computer programs (called clients).  Often the computer on which a server program runs is also called a server.  The term host is often used as a synonym for server.</span>. After you <!--ForeHelp.Hotspot JUMP="Public_Key_Authentication_for_SSH2"--><!--ForeHelp.EndHotspot--><a href="Public-Key_Authentication_for_SSH2.htm">create your public-private key pair</a>, you store your private key on your local machine and transfer your public key to the remote host to which you want to connect. If you want to connect to more than one remote machine, you must transfer your public key to each machine. Many users choose to encrypt their private key with a <a href="javascript:TextPopup(this)" id="HotSpot51690" class="glossterm">passphrase</a><script type="text/javascript" language="JavaScript1.2">//<![CDATA[
TextPopupInit('HotSpot51690', 'POPUP51690');
//]]></script><span class="glosstext" id="POPUP51690" style="display: none;"> A password used to protect a private key from unauthorized use.  It is recommended that a passphrase be assigned to all private keys to prevent unauthorized use, especially in environments where multiple individuals have access to the machine on which the private key files are stored.  When using public-key   authentication, a private key with an assigned passphrase will not be available if the correct passphrase is not supplied during the authentication process.</span>. To log on to all the machines in the example below, you would have to enter your passphrase three times; once each time you made a <a href="javascript:TextPopup(this)" id="HotSpot38416" class="glossterm">connection</a><script type="text/javascript" language="JavaScript1.2">//<![CDATA[
TextPopupInit('HotSpot38416', 'POPUP38416');
//]]></script><span class="glosstext" id="POPUP38416" style="display: none;"> A data path or circuit between two computers over a phone line, network cable, or other means.</span>, even if the machines use the same <a href="javascript:TextPopup(this)" id="HotSpot38412" class="glossterm">public-private key pair</a><script type="text/javascript" language="JavaScript1.2">//<![CDATA[
TextPopupInit('HotSpot38412', 'POPUP38412');
//]]></script><span class="glosstext" id="POPUP38412" style="display: none;"> A pair of keys used with RSA or DSA authentication.  The public key is usually kept in a file named Identity.pub, which is then transferred to the remote SSH server and appended to the user's authorized_keys file.  Another file usually named identity contains both the public key and the corresponding private key.  This file is kept on the local machine and is used by SecureCRT with public key or RSA authentication methods.</span>.</p>
<p class="FigureImage"><img src="SSH2Agent.bmp" alt="Generate/SSH2Agent16.gif" title="Generate/SSH2Agent16.gif" width="235" height="185" align="bottom" border="0" /></p>
<p class="FigureCaption"><i style="font-style: italic;">Connecting to Multiple Hosts</i></p>
<p>If you use the SecureCRT agent, however, you only have to enter your passphrase when making the first connection. The agent holds your decrypted private key and authenticates any further connections to machines using the same public-private key pair.</p>
<p class="SectionHead">Agent Forwarding</p>
<p>Agent forwarding is using the agent to connect to a remote machine through another remote machine (see the figure below).</p>
<p class="FigureImage"><img src="SSH2AgentForwarding.bmp" alt="Generate/SSH2AgentForwarding16.gif" title="Generate/SSH2AgentForwarding16.gif" width="234" height="101" align="bottom" border="0" /></p>
<p class="FigureCaption"><i style="font-style: italic;">Connecting Through a Remote Host</i></p>
<p>To connect to the destination machine without using the agent, you would have to transfer your public key to both the intermediate and destination hosts <u>and</u> you would have to store your private key on the intermediate machine as well as on your local machine.</p>
<p>With the agent enabled, it acts as your proxy in authenticating to the destination host and allows you to keep your private key on just the local machine.</p>
<p class="NoteLevel1"><span class="NoteBold">Note:</span> Agent forwarding will only work if all intermediate machines are OpenSSH agent protocol servers running <a href="javascript:TextPopup(this)" id="HotSpot10703" class="glossterm">SSH2</a><script type="text/javascript" language="JavaScript1.2">//<![CDATA[
TextPopupInit('HotSpot10703', 'POPUP10703');
//]]></script><span class="glosstext" id="POPUP10703" style="display: none;"> The second version of the SSH protocol which provides a way to encrypt network traffic between a client and a server, with a slightly different set of security features than the SSH1 protocol provides.</span>. Destination servers must be running SSH2 but do not have to be OpenSSH agent protocol servers.</p>
<p class="SectionHead">Enabling the Agent</p>
<p>To enable the agent options follow these steps:</p>
<p class="Step1Level1"><!--ForeHelp.Ignore-->1.&#160;&#160;&#160;On the local machine, start SecureCRT.</p>
<p class="Step1Level1"><!--ForeHelp.Ignore-->2.&#160;&#160;&#160;Open the <!--ForeHelp.Hotspot JUMP="Global_Options_Dialog"--><!--ForeHelp.EndHotspot--><a href="Global_Options_Dialog.htm"><span class="Dialog">Global Options</span></a> dialog, and select the <strong><a href="GO_SSH2.htm">SSH2</a></strong> category.</p>
<p class="Step1Level1"><!--ForeHelp.Ignore-->3.<!--ForeHelp.EndIgnore-->&#160;&#160;&#160;To enable the SSH2 Agent, check the <strong>Add keys to agent</strong> check box in the <strong>Advanced</strong> group.</p>
<p class="Step1Level1"><!--ForeHelp.Ignore-->4.&#160;&#160;&#160;To enable agent forwarding on a global basis, check the <strong>Enable OpenSSH agent forwarding</strong> check box in the <strong>Advanced</strong> group and click on the <strong>OK</strong> button to save your settings.</p>
<p class="Step1Level1">5.&#160;&#160;&#160;To enable agent forwarding on a per-session basis, open the <span class="DialogName"><a href="Session_Options_Dialog.htm">Session Options</a></span> dialog and select the <span class="DialogName"><a href="SO_Connection_SSH2_Advanced.htm">SSH2/Advanced</a></span> category. Check the <strong>Enable OpenSSH agent forwarding</strong> check box in the <strong>Options</strong> group and click on the <strong>OK</strong> button to save your settings. This is a tri-state option; If this option is set to the tri-state value (square), the setting from the <span class="DialogName"><a href="GO_SSH2.htm">Global Options/SSH2</a></span> category will be used.</p>
<p class="SectionHead">Flushing the Agent Cache</p>
<p>To delete the public keys from the agent's cache you will need to assign the SSH_FLUSH_AGENT command to a specified keyboard key. You can do this by following these steps:</p>
<p class="Step1Level1"><!--ForeHelp.Ignore-->1.&#160;&#160;&#160;<!--ForeHelp.EndIgnore-->From the Tools menu, select <strong>Keymap Editor...</strong></p>
<p class="Step1Level1"><!--ForeHelp.Ignore-->2.&#160;&#160;&#160;<!--ForeHelp.EndIgnore-->Press the <span style="font-weight: bold;">Map a Key...</span> button and select the key that you want to associate with the SSH_FLUSH_AGENT command. This should be a key that is not already assigned or frequently used such as <code>F2</code> or <code>F11</code> for example.</p>

<p class="Step1Level1"><!--ForeHelp.Ignore-->3.&#160;&#160;&#160;<!--ForeHelp.EndIgnore-->From the <strong>Function</strong> list, select <span class="Entry">SSH Function</span>.</p>
<p class="Step1Level1"><!--ForeHelp.Ignore--><!--ForeHelp.Ignore-->4.&#160;&#160;&#160;<!--ForeHelp.EndIgnore-->From the <span class="Label">SSH Function</span> list, select <span class="Entry">SSH_FLUSH_AGENT</span> and click the <span class="Label">OK</span> button.</p>
<p class="Step1Level1">5.&#160;&#160;&#160;<!--ForeHelp.EndIgnore-->Save the keymap that you created and close the <strong>Keymap Editor</strong>.</p>
<p class="Step1Level1">6.&#160;&#160;&#160;<!--ForeHelp.EndIgnore-->Restart SecureCRT using the new keymap.</p>
<p class="Step1Level1">7. &#160;&#160;<!--ForeHelp.EndIgnore-->Press the key you chose to flush the agent cache.</p>
<p class="NoteLevel1"><span class="NoteBold">Note:</span> There will be no feedback letting you know that the agent cache has been flushed except that the previously cached public keys will not longer work.</p>
<p>&#160;</p>
<!--ForeHelp.EndIgnore-->
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
