<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Adobe RoboHelp 11" />
<title>Dialog Object</title>
<link rel="StyleSheet" href="SecureCRT.css" type="text/css" />
<style type="text/css">
<!--
.BannerBase { font-size:14pt;
font-weight:bold;
margin:0pt 1px 0pt 0pt;
font-family:Arial, sans-serif;
fhname:Banner Base; }
.Base { font-size:10pt;
margin:0pt 1px 0pt 0pt;
font-family:Arial, sans-serif; }
.Base1 { font-size:10pt;
margin:6pt 0pt 6pt 0pt;
font-family:System, sans-serif;
fhname:Base#1; }
.Base025indent { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.Base025indent1 { margin:0pt 0pt 0pt 18pt;
fhname:Base025indent#1; }
.Base025indhanging { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
text-indent:18pt;
font-family:Arial, sans-serif; }
.Base050indent { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif; }
.Base050indent1 { margin:0pt 0pt 0pt 36pt;
fhname:Base050indent#1; }
.Base050indhanging { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
text-indent:36pt;
font-family:Arial, sans-serif; }
.Base075indent { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:Arial, sans-serif; }
.BigBoldBase { font-size:11pt;
font-weight:bold;
margin:0pt 0pt 0.05in 0pt;
font-family:Arial, sans-serif; }
.BodyText2 { margin:0pt 0pt 0pt 0.3in;
font-family:Arial, sans-serif;
fhname:Body Text 2; }
.BodyTextIndent2 { margin:0pt 0pt 0pt 0.6in;
font-family:Arial, sans-serif;
fhname:Body Text Indent 2; }
.Bullet1 { font-size:10pt;
margin:0pt 0pt 2pt 0.2097in;
text-indent:-0.2097in;
font-family:Arial, sans-serif; }
.bullet11 { font-size:8pt;
margin:0pt 0.014in 0pt 0.2in;
text-indent:-0.2in;
font-family:Arial, sans-serif;
fhname:bullet1#1; }
.Bullet2 { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
text-indent:-18pt;
font-family:Arial, sans-serif; }
.Bullet3 { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:Arial, sans-serif; }
.Bullet4 { font-size:10pt;
margin:0pt 0pt 0pt 72pt;
text-indent:72pt;
font-family:Arial, sans-serif; }
CODE { font-size:10pt;
font-family:"Courier New" , sans-serif;
fhtype:character; }
.CODE1 { font-size:10pt;
font-family:"Courier New" , sans-serif;
fhname:CODE#1;
fhtype:character; }
.CodeText { font-size:10pt;
font-family:"Courier New" , sans-serif; }
.CodeText075Indent { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:"Courier New" , sans-serif; }
.DefaultParagraphFont { font-size:12pt;
font-family:"Times New Roman" , sans-serif;
fhname:Default Paragraph Font;
fhtype:character; }
.DefaultParagraphFont1 { font-size:12pt;
font-family:"Times New Roman" , sans-serif;
fhname:Default Paragraph Font#1;
fhtype:character; }
.Dialog { font-size:10pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhtype:character; }
.Entry { font-size:10pt;
font-family:"Courier New" , sans-serif; }
.Entry025indent { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
font-family:"Courier New" , sans-serif; }
.Entry025indent1 { margin:6pt 0pt 6pt 18pt;
font-family:"Courier New" , sans-serif;
fhname:Entry025indent#1; }
.Entry050indent { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
font-family:"Courier New" , sans-serif; }
.Entry075indent { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:"Courier New" , sans-serif; }
.Entry100indent { font-size:10pt;
margin:0pt 0pt 0pt 72pt;
font-family:"Courier New" , sans-serif; }
.ExampleProgram { font-size:10pt;
font-family:"Courier New" , sans-serif; }
.Field { font-size:10pt;
font-weight:bold;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.Figure { font-style:italic; }
.footnotereference { font-size:12pt;
vertical-align:super;
font-family:"Times New Roman" , sans-serif;
fhname:footnote reference;
fhtype:character; }
.footnotetext { fhname:footnote text; }
.GlossaryTerm { font-size:11pt;
font-weight:bold;
margin:0pt 0pt 3pt 0pt;
font-family:Arial, sans-serif;
fhname:Glossary Term; }
.Group { font-size:10pt;
font-weight:bold;
margin:0.0166in 0pt 0.0166in 0pt;
font-family:Arial, sans-serif; }
.Heading { font-size:12pt;
font-weight:bold;
margin:12pt 0pt 6pt 0pt;
font-family:System, sans-serif; }
.heading1 { font-size:16pt;
font-weight:bold;
font-style:italic;
fhname:heading 1; }
.heading11 { font-weight:bold;
font-family:Arial, sans-serif;
fhname:heading 1#1; }
.heading2 { font-size:14pt;
font-weight:bold;
margin:0pt 0pt 0pt 18pt;
fhname:heading 2; }
.heading21 { font-weight:bold;
margin:0pt 0pt 0pt 0.3in;
font-family:Arial, sans-serif;
fhname:heading 2#1; }
.heading3 { font-size:12pt;
font-weight:bold;
margin:0pt 0pt 0pt 36pt;
fhname:heading 3; }
.heading4 { font-size:9pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhname:heading 4;
text-decoration:overline; }
.heading41 { font-size:10pt;
font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 36pt;
fhname:heading 4#1; }
.heading5 { font-size:9pt;
font-weight:bold;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif;
fhname:heading 5;
text-decoration:underline; }
.heading51 { font-size:11pt;
font-weight:bold;
margin:0pt 0pt 0pt 54pt;
fhname:heading 5#1; }
.heading5Body { font-size:9pt;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif;
fhname:heading 5:  Body; }
.heading6 { font-size:9pt;
font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 36pt;
fhname:heading 6; }
.heading61 { font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 72pt;
fhname:heading 6#1; }
.Heading6Body { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:Arial, sans-serif;
fhname:Heading 6:  Body; }
.heading8 { font-weight:bold;
text-align:center;
fhname:heading 8; }
.Hyperlink { font-size:12pt;
color:#0000ff;
font-family:"Times New Roman" , sans-serif;
fhtype:character;
text-decoration:underline; }
.Hyperlink1 { font-size:12pt;
color:#0000ff;
font-family:"Times New Roman" , sans-serif;
fhname:Hyperlink#1;
fhtype:character;
text-decoration:underline; }
.Label1 { font-size:8pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhname:Label#1;
fhtype:character; }
.MenuCommand { font-size:10pt;
font-weight:bold;
margin:12pt 0pt 0pt 0pt;
font-family:Arial, sans-serif; }
.MenuCommand2ndLevel { font-size:10pt;
font-weight:bold;
margin:6pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.NewCodeText { font-size:10pt;
margin:0pt 1px 0pt 0pt;
font-family:"Courier New" , sans-serif; }
.Normal { font-size:12pt;
margin:5pt 0pt 5pt 0pt;
font-family:"Times New Roman" , sans-serif; }
.Normal1 { font-size:10pt;
margin:0pt 1px 0pt 0pt;
font-family:"Times New Roman" , sans-serif;
fhname:Normal#1; }
.Normal2 { font-size:12pt;
margin:0pt 1px 0pt 0pt;
font-family:"Times New Roman" , sans-serif;
fhname:Normal#2; }
.Normal3 { font-size:12pt;
margin:0pt 1px 0pt 0pt;
font-family:Arial, sans-serif;
fhname:Normal#3; }
.NoteBold { font-size:10pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhtype:character; }
.NoteTest025indent { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif; }
.NoteText { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.Number1 { font-size:10pt;
font-family:Arial, sans-serif; }
.Number2 { font-size:10pt;
font-family:Arial, sans-serif; }
.Number3 {  }
.Number4 {  }
.Number5 {  }
.ObjHead025Indent { font-size:10pt;
font-weight:bold;
margin:0pt 0pt 0.028in 18pt;
font-family:Arial, sans-serif;
text-decoration:underline; }
.ObjHead050Indent { font-size:10pt;
font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif; }
.Seealso { margin:24pt 0pt 6pt 0pt; }
.Step { font-size:10pt;
margin:0pt 0pt 12pt 18pt;
text-indent:-18pt;
font-family:Arial, sans-serif; }
.Step2 { font-size:10pt;
margin:0pt 0pt 12pt 36pt;
text-indent:-18pt;
font-family:Arial, sans-serif; }
.TableBody { font-size:10pt;
margin:3pt 0pt 3pt 0pt;
font-family:Arial, sans-serif; }
body { background-color:#ffffff; }
-->
</style>
<!--ForeHelp.Ignore-->
<script src="./sniffer.js" type="text/javascript" language="JavaScript1.2"></script>
<script src="./hhscript.js" type="text/javascript" language="JavaScript1.2"></script>
<script src="./SecureCRT.js" type="text/javascript" language="JavaScript1.2"></script>
<script src="./fh_dhtml.js" type="text/javascript" language="JavaScript1.2"></script>
<!--ForeHelp.EndIgnore-->
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="whmsg.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript" src="whver.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whlang.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js" charset="utf-8"></script>

</head>

<body bgproperties="FIXED"><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.replace(strUrl.substring(0, n));
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("Scripting\nScript Objects Reference\nDialog Object");
addAvenueInfo("ActiveX Scripting","Screen_Object.htm","FileTransfer_Object.htm");
addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);

	
	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("SecureCRT.htm", "", ">", "Home", "Welcome.htm");
document.write("<a href=\"Creating_Python_Scripts.htm\">Scripting<\/a> > <a href=\"Application_Object.htm\">Script Objects Reference<\/a> > Dialog Object<\/p>");

}
else
	if (window.gbIE4)
		document.location.reload();

onLoadHandler = function()
{
  if (window.setRelStartPage)
	{
	setTimeout("setRelStartPage('SecureCRT.htm');", 1)

    setTimeout("UpdateBreadCrumbsMarker();", 1);
	}
}

if (window.addEventListener){  
	window.addEventListener('load', onLoadHandler, false);   
} else if (window.attachEvent){  
	window.attachEvent('onload', onLoadHandler);  
}

function onSetStartPage()
{
  autoSync(0);
  sendSyncInfo();
  sendAveInfoOut();
}
//-->
//]]></script>
<script type="text/javascript" src="./ehlpdhtm.js" language="JavaScript1.2"></script>


<!--ForeHelp.Keyword KKEYS="scripting;scripting&#028;objects;scripting&#028;ActiveX"-->
<!--ForeHelp.EndKeyword-->
<!--ForeHelp.Banner-->
<p class="Banner"><span><img src="secureicon.bmp" alt="SecureCRT Icon" 
							 title="SecureCRT Icon" width="32" height="32" 
							 border="0" /></span> &#160;Dialog Object</p>
<!--ForeHelp.Ignore-->
<hr align="center" />
<!--ForeHelp.EndIgnore--><!--ForeHelp.EndBanner-->
<p>&#160;</p>
<p class="SOH1">Description</p>
<p class="SingleSpaced025">The Dialog object provides access to simple 
 user-interface features provided by <span>Secure</span>CRT.</p>
<p class="SingleSpaced025">&#160;</p>
<p class="SOH1">Syntax</p>
<p class="SingleSpaced025">crt.Dialog.<span style="font-style: italic;"><i>Method</i></span>([<span 
	 style="font-style: italic;"><i>arglist</i></span>])</p>
<p class="SingleSpaced025">&#160;</p>
<p class="SOH1">Remarks</p>
<p class="SingleSpaced025"><span>Secure</span>CRT's Dialog object is accessed 
 through the top-level object’s <code><span style="font-family: 'Courier New', sans-serif;">Dialog</span></code> 
 property.</p>
<p class="SingleSpaced025">&#160;</p>
<p class="SOH1"><u style="text-decoration: underline; ">Dialog Object Methods</u></p>
<table cellspacing="1">
	<col />
	<tr>
		<td style="padding-left: 1px; padding-top: 1px; padding-right: 1px; 
			 padding-bottom: 1px;" width="192"><p class="Base"><!--ForeHelp.Hotspot JUMP="Dialog_Object_Methods"--><!--ForeHelp.EndHotspot--><a 
		 href="Dialog_Object.htm#Dialog_Object_Methods"><b>Methods</b></a></p></td>
	</tr>
	<tr>
		<td style="padding-left: 1px; padding-top: 1px; padding-right: 1px; 
			 padding-bottom: 1px;" width="192"><p class="Base">&#160;&#160;&#160;&#160;<a 
		 href="#Dialog_Object_Methods_FileOpenDialog">FileOpenDialog</a></p></td>
	</tr>
	<tr>
		<td style="padding-left: 1px; padding-top: 1px; padding-right: 1px; 
			 padding-bottom: 1px;" width="192"><p class="Base">&#160;&#160;&#160;&#160;<!--ForeHelp.Hotspot JUMP="Dialog_Object_Methods_MessageBox"--><!--ForeHelp.EndHotspot--><a 
		 href="Dialog_Object.htm#Dialog_Object_Methods_MessageBox">MessageBox</a></p></td>
	</tr>
	<tr>
		<td style="padding-left: 1px; padding-top: 1px; padding-right: 1px; 
			 padding-bottom: 1px;" width="192"><p class="Base">&#160;&#160;&#160;&#160;<!--ForeHelp.Hotspot JUMP="Dialog_Object_Methods_Prompt"--><!--ForeHelp.EndHotspot--><a 
		 href="Dialog_Object.htm#Dialog_Object_Methods_Prompt">Prompt</a></p></td>
	</tr>
</table>
<p class="Base">&#160;</p>
<p class="SOH1"><a name="Dialog_Object_Methods" id="Dialog_Object_Methods"></a>Methods</p>
<p class="SingleSpaced075">&#160;</p>
<p class="SOH2"><a name="Dialog_Object_Methods_FileOpenDialog" id="a1"></a>FileOpenDialog</p>
<p class="SOH3">Description</p>
<p class="SingleSpaced075">Display a file browse dialog from which the 
 user can select a single file.</p>
<p class="SOH3">Remarks</p>
<p class="SingleSpaced075">If the defaultFilename parameter is simply a 
 filename (no path provided), the file dialog browser will open in current 
 working directory. If the defaultFilename parameter specifies an absolute 
 path to a file, the file dialog browser will open in the parent directory 
 of the file. The filename filter is in the following format:</p>
<p class="Entry100single">&lt;Name of Filter&gt; (*.&lt;extension&gt;)|*.&lt;extension&gt;||</p>
<p class="SingleSpaced075">For example:</p>
<p class="Entry100">Text Files (*.txt)|*.txt||</p>
<p class="SingleSpaced075">or</p>
<p class="Entry100">Text Files (*.txt)|*.txt|Log File (*.log)|*.log||</p>
<p class="SingleSpaced075">The FileOpenDialog method returns the path to 
 the selected file.</p>
<p class="SingleSpaced075">&#160;</p>
<p class="SOH3">VBScript</p>
<p class="SOH4">Syntax</p>
<p class="Entry100single">crt.Dialog.FileOpenDialog([<span style="font-style: italic;"><i>title</i></span>, 
 [<span style="font-style: italic;"><i>buttonLabel</i></span>, [<span style="font-style: italic;"><i>defaultFilename</i></span>, 
 [<span style="font-style: italic;"><i>filter</i></span> ]]]])</p>
<p class="SOH4">Examples</p>
<p class="Entry100single"><span style="font-family: 'Courier New', sans-serif;">' 
 Browse for a file of any type</span></p>
<p class="Entry100single">filePath = crt.Dialog.FileOpenDialog(&quot;Please 
 select a file&quot;)</p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single">' Browse for only .txt files</p>
<p class="Entry100single">filePath = crt.Dialog.FileOpenDialog(&quot;Please 
 select a text file&quot;, &quot;Open&quot;, &quot;&quot;, &quot;Text Files 
 (*.txt)|*.txt||&quot;)</p>
<p class="SingleSpaced075">&#160;</p>
<p class="SOH3">Python</p>
<p class="SOH4">Syntax</p>
<p class="Entry100single">crt.Dialog.FileOpenDialog([<span style="font-style: italic;"><i>title</i></span>, 
 [<span style="font-style: italic;"><i>buttonLabel</i></span>, [<span style="font-style: italic;"><i>defaultFilename</i></span>, 
 [<span style="font-style: italic;"><i>filter</i></span> ]]]])</p>
<p class="SOH4">Examples</p>
<p class="Entry100single"><span style="font-family: 'Courier New', sans-serif;"># 
 Browse for a file of any type</span></p>
<p class="Entry100single">filePath = crt.Dialog.FileOpenDialog(title=&quot;Please 
 select a file&quot;)</p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single"># Browse for only .txt files</p>
<p class="Entry100single">filePath = crt.Dialog.FileOpenDialog(title=&quot;Please 
 select a text file&quot;, filter=&quot;Text Files (*.txt)|*.txt||&quot;)</p>
<p class="SingleSpaced075">&#160;</p>
<p class="SOH2"><a name="Dialog_Object_Methods_MessageBox" id="Dialog_Object_Methods_MessageBox"></a>MessageBox</p>
<p class="SOH3">Description</p>
<p class="SingleSpaced075">Display a message</p>
<p class="SOH3">Remarks</p>
<p class="SingleSpaced075">The MessageBox function displays a message string 
 to the user. The optional title string sets the title or caption of the 
 MessageBox. The buttons that appear on the MessageBox can be configured 
 by passing a combination of numeric values in the optional ‘buttons’ parameter. 
 By default MessageBox will display the message string with an <strong>OK</strong> 
 button. However, many possibilities exist for displaying message boxes 
 with different icons, and buttons.</p>
<p class="SingleSpaced075">The MessageBox function returns a numeric value 
 that can be used to identify which button was clicked.</p>
<p class="SOH3">VBScript</p>
<p class="SOH4">Syntax</p>
<p class="Entry100single">crt.Dialog.MessageBox(<i>message</i> [, <i>title</i> 
 [, <i>buttons</i>]])</p>
<p class="SOH4">Example</p>
<p class="SingleSpaced075">The following code sample defines the constants 
 that can be combined to form the &quot;button&quot; parameter as well 
 as the possible numeric return values:</p>
<p class="Entry100single"><nobr style="white-space: nowrap;">' button parameter 
 options</nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 ICON_STOP = 16&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 display the ERROR/STOP icon.</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 ICON_QUESTION = 32&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 display the '?' icon</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 ICON_WARN = 48&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 display a '!' icon.</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 ICON_INFO= 64&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 displays &quot;info&quot; icon.</span></nobr></p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 BUTTON_OK = 0&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 OK button only</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 BUTTON_CANCEL = 1&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 OK and Cancel buttons</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 BUTTON_ABORTRETRYIGNORE = 2&#160;&#160;&#160;&#160;' Abort, Retry, and 
 Ignore buttons</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 BUTTON_YESNOCANCEL = 3&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 Yes, No, and Cancel buttons</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 BUTTON_YESNO = 4&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 Yes and No buttons</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 BUTTON_RETRYCANCEL = 5&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 Retry and Cancel buttons</span></nobr></p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 DEFBUTTON1 = 0&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' First 
 button is default</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 DEFBUTTON2 = 256&#160;&#160;&#160;&#160;&#160;&#160;' Second button is 
 default</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 DEFBUTTON3 = 512&#160;&#160;&#160;&#160;&#160;&#160;' Third button is 
 default</span></nobr></p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">' 
 Possible MessageBox() return values</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 IDOK = 1&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 OK button clicked</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 IDCANCEL = 2&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 Cancel button clicked</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 IDABORT = 3&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 Abort button clicked</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 IDRETRY = 4&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 Retry button clicked</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 IDIGNORE = 5&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 Ignore button clicked</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 IDYES = 6&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 Yes button clicked</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">Const 
 IDNO = 7&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;' 
 No button clicked</span></nobr></p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">' 
 Display a messagebox with Yes/No buttons.</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">' 
 Make the 'No' button the default.</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">result 
 = crt.Dialog.MessageBox(&quot;Login Failed, Retry?&quot;, &quot;Error&quot;, 
 ICON_QUESTION Or BUTTON_YESNO Or DEFBUTTON2 )</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">If 
 result = IDNO Then</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">&#160;&#160;&#160;&#160;Exit 
 Sub</span></nobr></p>
<p class="Entry100single"><nobr style="white-space: nowrap;"><span style="font-family: 'Courier New', sans-serif;">End 
 If</span></nobr></p>
<p class="SOH3">Python</p>
<p class="SOH4">Syntax</p>
<p class="Entry100single">crt.Dialog.MessageBox(<span style="font-style: italic;"><i>message</i></span> 
 [, <span style="font-style: italic;"><i>title</i></span> [, <span style="font-style: italic;"><i>buttons</i></span>]])</p>
<p class="SOH4">Example</p>
<p class="SingleSpaced075">The following code sample defines the constants 
 that can be combined to form the &quot;button&quot; parameter as well 
 as the possible numeric return values:</p>
<p class="Entry100single"># button parameter options</p>
<p class="Entry100single">ICON_STOP = 16 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 display the ERROR/STOP icon.</p>
<p class="Entry100single">ICON_QUESTION = 32 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 display the '?' icon</p>
<p class="Entry100single">ICON_WARN = 48 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 display a '!' icon.</p>
<p class="Entry100single">ICON_INFO= 64 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 displays &quot;info&quot; icon.</p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single">BUTTON_OK = 0 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 OK button only</p>
<p class="Entry100single">BUTTON_CANCEL = 1 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 OK and Cancel buttons</p>
<p class="Entry100single">BUTTON_ABORTRETRYIGNORE = 2 &#160;&#160;&#160;# 
 Abort, Retry, and Ignore buttons</p>
<p class="Entry100single">BUTTON_YESNOCANCEL = 3 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 Yes, No, and Cancel buttons</p>
<p class="Entry100single">BUTTON_YESNO = 4 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 Yes and No buttons</p>
<p class="Entry100single">BUTTON_RETRYCANCEL = 5 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 Retry and Cancel buttons</p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single">DEFBUTTON1 = 0 &#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 First button is default</p>
<p class="Entry100single">DEFBUTTON2 = 256 &#160;&#160;&#160;&#160;&#160;# 
 Second button is default</p>
<p class="Entry100single">DEFBUTTON3 = 512 &#160;&#160;&#160;&#160;&#160;# 
 Third button is default</p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single"># Possible MessageBox() return values</p>
<p class="Entry100single">IDOK = 1 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 OK button clicked</p>
<p class="Entry100single">IDCANCEL = 2 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 Cancel button clicked</p>
<p class="Entry100single">IDABORT = 3 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 Abort button clicked</p>
<p class="Entry100single">IDRETRY = 4 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 Retry button clicked</p>
<p class="Entry100single">IDIGNORE = 5 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 Ignore button clicked</p>
<p class="Entry100single">IDYES = 6 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 Yes button clicked</p>
<p class="Entry100single">IDNO = 7 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;# 
 No button clicked</p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single"># Display a messagebox with Yes/No buttons.</p>
<p class="Entry100single"># Make the 'No' button the default.</p>
<p class="Entry100single">result = crt.Dialog.MessageBox(&quot;Login Failed, 
 Retry?&quot;, &quot;Error&quot;, ICON_QUESTION | BUTTON_YESNO | DEFBUTTON2 
 )</p>
<p class="Entry100single">if result == IDNO:</p>
<p class="Entry100single">&#160;&#160;return</p>
<p class="SingleSpaced075">&#160;</p>
<p class="SOH2"><a name="Dialog_Object_Methods_Prompt" id="Dialog_Object_Methods_Prompt"></a>Prompt</p>
<p class="SOH3">Description</p>
<p class="SingleSpaced075">Prompt a user to enter a string.</p>
<p class="SOH3">Remarks</p>
<p class="SingleSpaced075">The Prompt function displays a simple dialog 
 that has message and an edit field for the user to enter a string. The 
 message parameter is an informational string displayed in the prompt dialog. 
 Optionally the title of the prompt dialog may be set by passing a title 
 string. By default the edit field is empty, but the initial contents of 
 the edit field may be set with the optional default string. Finally, if 
 the text entered in the edit field is to be obscured as it is entered 
 (such as when entering a password) then the Boolean <span style="font-style: italic;"><i>isPassword</i></span> 
 field should be set to True.</p>
<p class="SingleSpaced075">If the user clicks <span style="font-weight: bold;">OK</span>, 
 Prompt returns the entered string; whereas, if the user clicks <span style="font-weight: bold;">Cancel</span>, 
 Prompt returns an empty string.</p>
<p class="SOH3">VBScript</p>
<p class="SOH4">Syntax</p>
<p class="Entry100single">crt.Dialog.Prompt(<i>message</i> [, <i>title 
 [, default [, isPassword ]]</i>])</p>
<p class="SOH4">Example</p>
<p class="Entry100single"><span style="font-family: 'Courier New', sans-serif;">Dim 
 pass</span></p>
<p class="Entry100single">&#160;&#160;&#160;&#160;pass = crt.Dialog.Prompt(&quot;Enter 
 your password:&quot;, &quot;Logon Script&quot;, &quot;&quot;, True)</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;If pass = &quot;&quot; 
 Then</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;' User clicked 
 Cancel button</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;Else</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;' User added 
 data</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;End If</p>
<p class="SOH3">Python</p>
<p class="SOH4">Syntax</p>
<p class="Entry100single">crt.Dialog.Prompt(<span style="font-style: italic;"><i>message</i></span> 
 [, <span style="font-style: italic;"><i>title</i></span> [, <span style="font-style: italic;"><i>default</i></span> 
 [, <span style="font-style: italic;"><i>isPassword</i></span> ]]])</p>
<p class="SOH4">Example</p>
<p class="Entry100single"><span style="font-family: 'Courier New', sans-serif;">password 
 = crt.Dialog.Prompt(&quot;Enter your password:&quot;, &quot;Logon Script&quot;, 
 &quot;&quot;, True)</span></p>
<p class="Entry100single">if password == &quot;&quot;:</p>
<p class="Entry100single">&#160;&#160;# User clicked Cancel button</p>
<p class="Entry100single">else:</p>
<p class="Entry100single">&#160;&#160;# User added data</p>
<p class="SingleSpaced075">&#160;</p>
<p class="SingleSpaced075">&#160;</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
