<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Adobe RoboHelp 11" />
<title>Arguments Object</title>
<link rel="StyleSheet" href="SecureCRT.css" type="text/css" />
<style type="text/css">
<!--
.BannerBase { font-size:14pt;
font-weight:bold;
margin:0pt 1px 0pt 0pt;
font-family:Arial, sans-serif;
fhname:Banner Base; }
.Base { font-size:10pt;
margin:0pt 1px 0pt 0pt;
font-family:Arial, sans-serif; }
.Base1 { font-size:10pt;
margin:6pt 0pt 6pt 0pt;
font-family:System, sans-serif;
fhname:Base#1; }
.Base025indent { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.Base025indent1 { margin:0pt 0pt 0pt 18pt;
fhname:Base025indent#1; }
.Base025indhanging { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
text-indent:18pt;
font-family:Arial, sans-serif; }
.Base050indent { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif; }
.Base050indent1 { margin:0pt 0pt 0pt 36pt;
fhname:Base050indent#1; }
.Base050indhanging { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
text-indent:36pt;
font-family:Arial, sans-serif; }
.Base075indent { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:Arial, sans-serif; }
.BigBoldBase { font-size:11pt;
font-weight:bold;
margin:0pt 0pt 0.05in 0pt;
font-family:Arial, sans-serif; }
.BodyText2 { margin:0pt 0pt 0pt 0.3in;
font-family:Arial, sans-serif;
fhname:Body Text 2; }
.BodyTextIndent2 { margin:0pt 0pt 0pt 0.6in;
font-family:Arial, sans-serif;
fhname:Body Text Indent 2; }
.Bullet1 { font-size:10pt;
margin:0pt 0pt 2pt 0.2097in;
text-indent:-0.2097in;
font-family:Arial, sans-serif; }
.bullet11 { font-size:8pt;
margin:0pt 0.014in 0pt 0.2in;
text-indent:-0.2in;
font-family:Arial, sans-serif;
fhname:bullet1#1; }
.Bullet2 { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
text-indent:-18pt;
font-family:Arial, sans-serif; }
.Bullet3 { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:Arial, sans-serif; }
.Bullet4 { font-size:10pt;
margin:0pt 0pt 0pt 72pt;
text-indent:72pt;
font-family:Arial, sans-serif; }
CODE { font-size:10pt;
font-family:"Courier New" , sans-serif;
fhtype:character; }
.CODE1 { font-size:10pt;
font-family:"Courier New" , sans-serif;
fhname:CODE#1;
fhtype:character; }
.CodeText { font-size:10pt;
font-family:"Courier New" , sans-serif; }
.CodeText075Indent { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:"Courier New" , sans-serif; }
.DefaultParagraphFont { font-size:12pt;
font-family:"Times New Roman" , sans-serif;
fhname:Default Paragraph Font;
fhtype:character; }
.DefaultParagraphFont1 { font-size:12pt;
font-family:"Times New Roman" , sans-serif;
fhname:Default Paragraph Font#1;
fhtype:character; }
.Dialog { font-size:10pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhtype:character; }
.Entry { font-size:10pt;
font-family:"Courier New" , sans-serif; }
.Entry025indent { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
font-family:"Courier New" , sans-serif; }
.Entry025indent1 { margin:6pt 0pt 6pt 18pt;
font-family:"Courier New" , sans-serif;
fhname:Entry025indent#1; }
.Entry050indent { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
font-family:"Courier New" , sans-serif; }
.Entry075indent { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:"Courier New" , sans-serif; }
.Entry100indent { font-size:10pt;
margin:0pt 0pt 0pt 72pt;
font-family:"Courier New" , sans-serif; }
.ExampleProgram { font-size:10pt;
font-family:"Courier New" , sans-serif; }
.Field { font-size:10pt;
font-weight:bold;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.Figure { font-style:italic; }
.footnotereference { font-size:12pt;
vertical-align:super;
font-family:"Times New Roman" , sans-serif;
fhname:footnote reference;
fhtype:character; }
.footnotetext { fhname:footnote text; }
.GlossaryTerm { font-size:11pt;
font-weight:bold;
margin:0pt 0pt 3pt 0pt;
font-family:Arial, sans-serif;
fhname:Glossary Term; }
.Group { font-size:10pt;
font-weight:bold;
margin:0.0166in 0pt 0.0166in 0pt;
font-family:Arial, sans-serif; }
.Heading { font-size:12pt;
font-weight:bold;
margin:12pt 0pt 6pt 0pt;
font-family:System, sans-serif; }
.heading1 { font-size:16pt;
font-weight:bold;
font-style:italic;
fhname:heading 1; }
.heading11 { font-weight:bold;
font-family:Arial, sans-serif;
fhname:heading 1#1; }
.heading2 { font-size:14pt;
font-weight:bold;
margin:0pt 0pt 0pt 18pt;
fhname:heading 2; }
.heading21 { font-weight:bold;
margin:0pt 0pt 0pt 0.3in;
font-family:Arial, sans-serif;
fhname:heading 2#1; }
.heading3 { font-size:12pt;
font-weight:bold;
margin:0pt 0pt 0pt 36pt;
fhname:heading 3; }
.heading4 { font-size:9pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhname:heading 4;
text-decoration:overline; }
.heading41 { font-size:10pt;
font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 36pt;
fhname:heading 4#1; }
.heading5 { font-size:9pt;
font-weight:bold;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif;
fhname:heading 5;
text-decoration:underline; }
.heading51 { font-size:11pt;
font-weight:bold;
margin:0pt 0pt 0pt 54pt;
fhname:heading 5#1; }
.heading5Body { font-size:9pt;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif;
fhname:heading 5:  Body; }
.heading6 { font-size:9pt;
font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 36pt;
fhname:heading 6; }
.heading61 { font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 72pt;
fhname:heading 6#1; }
.Heading6Body { font-size:10pt;
margin:0pt 0pt 0pt 54pt;
font-family:Arial, sans-serif;
fhname:Heading 6:  Body; }
.heading8 { font-weight:bold;
text-align:center;
fhname:heading 8; }
.Hyperlink { font-size:12pt;
color:#0000ff;
font-family:"Times New Roman" , sans-serif;
fhtype:character;
text-decoration:underline; }
.Hyperlink1 { font-size:12pt;
color:#0000ff;
font-family:"Times New Roman" , sans-serif;
fhname:Hyperlink#1;
fhtype:character;
text-decoration:underline; }
.Label1 { font-size:8pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhname:Label#1;
fhtype:character; }
.MenuCommand { font-size:10pt;
font-weight:bold;
margin:12pt 0pt 0pt 0pt;
font-family:Arial, sans-serif; }
.MenuCommand2ndLevel { font-size:10pt;
font-weight:bold;
margin:6pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.NewCodeText { font-size:10pt;
margin:0pt 1px 0pt 0pt;
font-family:"Courier New" , sans-serif; }
.Normal { font-size:12pt;
margin:5pt 0pt 5pt 0pt;
font-family:"Times New Roman" , sans-serif; }
.Normal1 { font-size:10pt;
margin:0pt 1px 0pt 0pt;
font-family:"Times New Roman" , sans-serif;
fhname:Normal#1; }
.Normal2 { font-size:12pt;
margin:0pt 1px 0pt 0pt;
font-family:"Times New Roman" , sans-serif;
fhname:Normal#2; }
.Normal3 { font-size:12pt;
margin:0pt 1px 0pt 0pt;
font-family:Arial, sans-serif;
fhname:Normal#3; }
.NoteBold { font-size:10pt;
font-weight:bold;
font-family:Arial, sans-serif;
fhtype:character; }
.NoteTest025indent { font-size:10pt;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif; }
.NoteText { font-size:10pt;
margin:0pt 0pt 0pt 18pt;
font-family:Arial, sans-serif; }
.Number1 { font-size:10pt;
font-family:Arial, sans-serif; }
.Number2 { font-size:10pt;
font-family:Arial, sans-serif; }
.Number3 {  }
.Number4 {  }
.Number5 {  }
.ObjHead025Indent { font-size:10pt;
font-weight:bold;
margin:0pt 0pt 0.028in 18pt;
font-family:Arial, sans-serif;
text-decoration:underline; }
.ObjHead050Indent { font-size:10pt;
font-weight:bold;
font-style:italic;
margin:0pt 0pt 0pt 36pt;
font-family:Arial, sans-serif; }
.Seealso { margin:24pt 0pt 6pt 0pt; }
.Step { font-size:10pt;
margin:0pt 0pt 12pt 18pt;
text-indent:-18pt;
font-family:Arial, sans-serif; }
.Step2 { font-size:10pt;
margin:0pt 0pt 12pt 36pt;
text-indent:-18pt;
font-family:Arial, sans-serif; }
.TableBody { font-size:10pt;
margin:3pt 0pt 3pt 0pt;
font-family:Arial, sans-serif; }
body { background-color:#ffffff; }
-->
</style>
<!--ForeHelp.Ignore-->
<script src="./sniffer.js" type="text/javascript" language="JavaScript1.2"></script>
<script src="./hhscript.js" type="text/javascript" language="JavaScript1.2"></script>
<script src="./SecureCRT.js" type="text/javascript" language="JavaScript1.2"></script>
<script src="./fh_dhtml.js" type="text/javascript" language="JavaScript1.2"></script>
<!--ForeHelp.EndIgnore-->
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="whmsg.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript" src="whver.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whlang.js" charset="utf-8"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js" charset="utf-8"></script>

</head>

<body bgproperties="FIXED"><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.replace(strUrl.substring(0, n));
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("Scripting\nScript Objects Reference\nArguments Object");
addAvenueInfo("ActiveX Scripting","Application_Object.htm","Window_Object.htm");
addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);

	
	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("SecureCRT.htm", "", ">", "Home", "Welcome.htm");
document.write("<a href=\"Creating_Python_Scripts.htm\">Scripting<\/a> > <a href=\"Application_Object.htm\">Script Objects Reference<\/a> > Arguments Object<\/p>");

}
else
	if (window.gbIE4)
		document.location.reload();

onLoadHandler = function()
{
  if (window.setRelStartPage)
	{
	setTimeout("setRelStartPage('SecureCRT.htm');", 1)

    setTimeout("UpdateBreadCrumbsMarker();", 1);
	}
}

if (window.addEventListener){  
	window.addEventListener('load', onLoadHandler, false);   
} else if (window.attachEvent){  
	window.attachEvent('onload', onLoadHandler);  
}

function onSetStartPage()
{
  autoSync(0);
  sendSyncInfo();
  sendAveInfoOut();
}
//-->
//]]></script>
<script type="text/javascript" src="./ehlpdhtm.js" language="JavaScript1.2"></script>


<!--ForeHelp.Banner-->
<p class="Banner"><span><img src="secureicon.bmp" alt="SecureCRT Icon" 
							 title="SecureCRT Icon" width="32" height="32" 
							 border="0" /></span> &#160;Arguments Object</p>
<!--ForeHelp.Ignore-->
<hr align="center" />
<!--ForeHelp.EndIgnore--><!--ForeHelp.EndBanner-->
<p class="Base">&#160;</p>
<p class="SOH1">Description</p>
<p class="SingleSpaced" style="margin-left: 24px;">The Arguments object 
 allows scripts to access arguments that are passed to the script by one 
 or more <span>Secure</span>CRT <code>/ARG</code> command-line options.</p>
<p class="SingleSpaced" style="margin-left: 24px;">&#160;</p>
<p class="SOH1">Syntax</p>
<p class="Entry025single">crt.Arguments.<span style="font-style: italic;"><i>Property</i></span></p>
<p class="Entry025single">crt.Arguments.<span style="font-style: italic;"><i>Method</i></span>(<span 
	 style="font-style: italic;"><i>arg</i></span>)</p>
<p class="Entry025single">&#160;</p>
<p class="SOH1">Remarks</p>
<p class="SingleSpaced" style="margin-left: 24px;">The <span>Secure</span>CRT 
 <code>/ARG</code> <!--ForeHelp.Hotspot JUMP="Table_of_Standard_Command_Line_Options"--><!--ForeHelp.EndHotspot--><a 
	 href="Table_of_Standard_Command_L.htm">command-line option</a> allows 
 you to write common scripts where specific values used by the scripts 
 (such as a hostname or port) are passed to the script through the <span>Secure</span>CRT 
 command line. Script arguments are passed as an argument to each <code>/ARG 
 &lt;<span style="font-style: italic;"><i>argument</i></span>&gt;</code> option.</p>
<p class="SingleSpaced" style="margin-left: 24px;">&#160;</p>
<p class="SOH1"><u style="text-decoration: underline; ">Arguments Object 
 Properties and Methods</u></p>
<table cellspacing="1">
	<tr>
		<td style="padding-left: 1px; padding-top: 1px; padding-right: 1px; 
			 padding-bottom: 1px;" width="192"><p class="Base"><!--ForeHelp.Hotspot JUMP="Argument_Opject_Properties"--><!--ForeHelp.EndHotspot--><a 
		 href="Arguments_Object.htm#Argument_Opject_Properties"><b>Properties</b></a></p></td>
		<td style="padding-left: 1px; padding-top: 1px; padding-right: 1px; 
			 padding-bottom: 1px;" width="192"><p class="Base"><!--ForeHelp.Hotspot JUMP="Argument_Opject_Methods"--><!--ForeHelp.EndHotspot--><a 
		 href="Arguments_Object.htm#Argument_Opject_Methods"><b>Methods</b></a></p></td>
	</tr>
	<tr>
		<td style="padding-left: 1px; padding-top: 1px; padding-right: 1px; 
			 padding-bottom: 1px;" height="15" width="192"><p class="Base025indent"><!--ForeHelp.Hotspot JUMP="Argument_Opject_Properties_Count"--><!--ForeHelp.EndHotspot--><a 
		 href="Arguments_Object.htm#Argument_Opject_Properties_Count">Count</a></p></td>
		<td style="padding-left: 1px; padding-top: 1px; padding-right: 1px; 
			 padding-bottom: 1px;" height="15" width="192"><p class="Base025indent"><!--ForeHelp.Hotspot JUMP="Argument_Opject_Methods_GetArg"--><!--ForeHelp.EndHotspot--><a 
		 href="Arguments_Object.htm#Argument_Opject_Methods_GetArg">GetArg</a></p></td>
	</tr>
</table>
<p class="Base">&#160;</p>
<p class="SOH1"><a name="Argument_Opject_Properties" id="Argument_Opject_Properties"></a>Properties</p>
<p class="SingleSpaced075">&#160;</p>
<p class="SOH2"><a name="Argument_Opject_Properties_Count" id="Argument_Opject_Properties_Count"></a>Count</p>
<p class="SOH3">Description</p>
<p class="SingleSpaced075">Returns the number of arguments passed to <span>Secure</span>CRT 
 using <span>Secure</span>CRT's <code>/ARG</code> command-line option.</p>
<p class="SOH3">Remarks</p>
<p class="SingleSpaced075">Read-only numeric property.</p>
<p class="SingleSpaced075">If SecureCRT is started with no <code>/ARG</code> 
 command-line options, the <span class="Entry">crt.Arguments.Count</span> 
 property is set to 0.</p>
<p class="SOH3">VBScript</p>
<p class="SOH4">Syntax</p>
<p class="Entry100single">crt.Arguments.Count</p>
<p class="SOH3">Python</p>
<p class="SOH4">Syntax</p>
<p class="Entry100single">crt.Arguments.Count</p>
<p class="SingleSpaced075">&#160;</p>
<p class="SOH1"><a name="Argument_Opject_Methods" id="Argument_Opject_Methods"></a>Methods</p>
<p class="SingleSpaced075">&#160;</p>
<p class="SOH2"><a name="Argument_Opject_Methods_GetArg" id="Argument_Opject_Methods_GetArg"></a>GetArg</p>
<p class="SOH3">Description</p>
<p class="SingleSpaced075">Returns the argument data associated with each 
 <code>/ARG</code> command-line option passed to <span>Secure</span>CRT.</p>
<p class="SOH3">Remarks</p>
<p class="SingleSpaced075">The GetArg method returns the data passed to 
 <span>Secure</span>CRT. The first argument passed to <span>Secure</span>CRT 
 is retrieved by calling <code>GetArg(0)</code>. The last argument is retrieved 
 by passing the count returned by crt.Arguments.Count minus 1.</p>
<p class="SingleSpaced075">&#160;</p>
<p class="SingleSpaced075" style="margin-left: 96px;"><span class="NoteBold">Note:</span> 
 The GetArg method is the default method on the Arguments object therefore 
 it will be invoked implicitly if it is not named. This means the following 
 two statements are equivalent:</p>
<p class="SingleSpaced075">&#160;</p>
<p class="Entry100single">MsgBox crt.Arguments.GetArg(0)</p>
<p class="Entry100single">MsgBox crt.Arguments(0)</p>
<p class="SingleSpaced075">&#160;</p>
<p class="SOH3">VBScript</p>
<p class="SOH4">Syntax</p>
<p class="Entry100single">crt.Arguments.GetArg(<span style="font-style: italic;"><i>number</i></span>)</p>
<p class="SOH4">Example</p>
<p class="Entry100single">#$language = &quot;VBScript&quot;</p>
<p class="Entry100single">#$interface = &quot;1.0&quot;</p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single">Sub Main()</p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;' This script should 
 be run by SecureCRT that has two</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;' /ARG parameters for 
 a hostname and port, for example:</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;'</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;' SecureCRT.exe /ARG 
 myhostname /ARG 5555</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;' Detect lack of arguments.</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;If crt.Arguments.Count 
 &lt;&gt; 2 Then</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;MsgBox 
 &quot;This script requires hostname and port</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;arguments&quot;</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Exit 
 Sub</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;End If</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;'</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;MsgBox &quot;Connecting 
 to hostname: &quot; &amp; crt.Arguments(0)</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;MsgBox &quot;Connecting 
 to port: &quot; &amp; crt.Arguments(1)</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;...</p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single">End Sub</p>
<p class="Entry100single">&#160;</p>
<p class="SOH3">Python</p>
<p class="SOH4">Syntax</p>
<p class="Entry100single">crt.Arguments.GetArg(<span style="font-style: italic;"><i>number</i></span>)</p>
<p class="SOH4">Example</p>
<p class="Entry100single">#$language = &quot;Python&quot;</p>
<p class="Entry100single">#$interface = &quot;1.0&quot;</p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single">def main():</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;# This script assumes 
 that SecureCRT was run with two</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;# /ARG parameters for 
 a hostname and port, such as:</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;#</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;# SecureCRT.exe /ARG 
 myhostname /ARG 5555</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;# Detect lack of arguments.</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;if crt.Arguments.Count 
 != 2:</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;crt.Dialog.MessageBox(</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;This 
 script requires hostname and port &quot; +</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;arguments&quot;)</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return</p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;crt.Dialog.MessageBox(</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;Connecting 
 to hostname: &quot; +</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;crt.Arguments[0])</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;crt.Dialog.MessageBox(</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;Connecting 
 to port: &quot; +</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;crt.Arguments[1])</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;</p>
<p class="Entry100single">&#160;&#160;&#160;&#160;...</p>
<p class="Entry100single">&#160;</p>
<p class="Entry100single">main()&#160;&#160;&#160;&#160;</p>
<p class="Base075indent">&#160;</p>
<p class="Base075indent">&#160;</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
